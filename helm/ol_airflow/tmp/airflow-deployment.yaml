---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: airflow
  namespace: "airflow"
spec:
  replicas: 1
  selector:
    matchLabels:
      deploy: airflow
      name: airflow
      component: webserver
  template:
    metadata:
      labels:
        deploy: airflow
        name: airflow
        component: webserver
    spec:
      serviceAccountName: airflow-scheduler
      containers:
        - name: airflow-scheduler
          image: 'apache/airflow:2.2.4'
          imagePullPolicy: IfNotPresent
          env:
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              valueFrom:
                configMapKeyRef:
                  name: airflow-config
                  key: sql_alchemy_conn
            - name: AIRFLOW__CORE__EXECUTOR
              valueFrom:
                configMapKeyRef:
                  name: airflow-config
                  key: executor
          volumeMounts:
            - name: logs-pv
              mountPath: /opt/airflow-kubernetes/logs
            - name: dags-pv
              mountPath: /opt/airflow-kubernetes/dags
          command:
            - airflow
          args:
            - scheduler
        - name: airflow-webserver
          env:
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              valueFrom:
                configMapKeyRef:
                  name: airflow-config
                  key: sql_alchemy_conn
            - name: AIRFLOW__CORE__EXECUTOR
              valueFrom:
                configMapKeyRef:
                  name: airflow-config
                  key: executor
          image: 'apache/airflow:2.2.4'
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          command:
            - airflow
          args:
            - webserver
      restartPolicy: Always
      volumes:
        - name: dags-pv
          persistentVolumeClaim:
            claimName: dags-pvc
        - name: logs-pv
          persistentVolumeClaim:
            claimName: logs-pvc