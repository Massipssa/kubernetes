kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ include "airflow.fullname" . }}-deploy #{{ include "airflow.name" . }}-deploy
  component: airflow # todo
  release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.webServer.replicaCount }}
  selector:
    matchLabels:
      name: airflow
      component: webserver
      #deploy: airflow
  template:
    metadata:
      labels:
        name: airflow
        component: webserver
        #deploy: airflow
    spec:
      serviceAccountName: airflow-scheduler
      restartPolicy: Always
      containers:

        - name: airflow-webserver
          env:
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              valueFrom:
                configMapKeyRef:
                  name: airflow-config
                  key: sql_alchemy_conn
            - name: AIRFLOW__CORE__EXECUTOR
              valueFrom:
                configMapKeyRef:
                  name: airflow-config
                  key: executor
          image: "{{ .Values.webServer.image.repository }}:{{ .Values.webServer.image.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort:  {{ .Values.webServer.port }}
          command:
            - airflow
          args:
            - webserver
      #volumes:
      #  - name: dags-pv
      #    persistentVolumeClaim:
      #      claimName: dags-pvc
      #  - name: logs-pv
      #    persistentVolumeClaim:
      #      claimName: logs-pvc
